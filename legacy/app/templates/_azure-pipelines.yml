steps:
- bash: |
   dotnet --version
   dotnet build $(Build.Repository.LocalPath)/Core -c Release -r linux-x64
   dotnet build $(Build.Repository.LocalPath)/Database -c Release -r linux-x64   
   # Publish on the same server (restore & build are skiped)
   dotnet publish $(Build.Repository.LocalPath)/Core -c Release -r linux-x64 --self-contained true
   dotnet publish $(Build.Repository.LocalPath)/Database -c Release -r linux-x64 --self-contained true
  failOnStderr: true
  displayName: build
  env:
   DOTNET_CLI_HOME: /tmp

- bash: |
   # Prepare an installer folder
   
   # Recreate install dir
   rm -fr $(Build.Repository.LocalPath)/install
   mkdir -p $(Build.Repository.LocalPath)/output
   mkdir -p $(Build.Repository.LocalPath)/install/Database
   mkdir -p $(Build.Repository.LocalPath)/install/$(microservice.name)

   # Remove scripts folder to avoid error on cp
   rm -rf $(Build.Repository.LocalPath)/Database/bin/Release/netcoreapp2.2/linux-x64/publish/Scripts
   
   # Copy db project with scripts folder
   cp $(Build.Repository.LocalPath)/Database/bin/Release/netcoreapp2.2/linux-x64/publish/* $(Build.Repository.LocalPath)/install/Database
   cp $(Build.Repository.LocalPath)/Database/*.json $(Build.Repository.LocalPath)/install/Database
   cp -r $(Build.Repository.LocalPath)/Database/Scripts $(Build.Repository.LocalPath)/install/Database
   # Copy microservice folder
   cp $(Build.Repository.LocalPath)/Core/bin/Release/netcoreapp2.2/linux-x64/publish/* $(Build.Repository.LocalPath)/install/$(microservice.name)
   cp $(Build.Repository.LocalPath)/Core/config.json $(Build.Repository.LocalPath)/install/$(microservice.name)/config.json
   
   cp $(Build.Repository.LocalPath)/service/start.sh $(Build.Repository.LocalPath)/install/   
   cp $(Build.Repository.LocalPath)/setup.sh $(Build.Repository.LocalPath)/install/
   chmod a+x $(Build.Repository.LocalPath)/install/setup.sh
   bash /opt/makeself/makeself.sh ./install ./output/$(microservice.name).sh "$(microservice.name) microservice" ./setup.sh 2>/dev/null # redirrect errors for a single line
  displayName: Prepare artifacts

- task: PublishPipelineArtifact@1
  displayName: Artifact release
  inputs:
    targetPath: '$(Build.Repository.LocalPath)/output'
    artifact: '_$(microservice.name)'