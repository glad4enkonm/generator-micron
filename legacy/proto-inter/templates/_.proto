syntax = "proto3";
package <%= package %>;


option csharp_namespace = "Broadcast.<%= packagePascalCase %>";

// Interface exported by the server.
// python -m grpc_tools.protoc --proto_path=. ./<%= package %>.proto --python_out=. --grpc_python_out=.

// Service definition

service Service {
    
<% serviceList.forEach(function(service){ -%>
<%=    `// ${service.name} ${service.operation}`%>
<%     service.protoServiceList.forEach(function(protoService){ -%>
<%=    `   rpc ${protoService.method}(${protoService.param}) returns (${protoService.result}) {}`%>
<%     }); -%>

<% }); -%>
}

// Messages definition

<% messageList.forEach(function(message){ -%>
<%=    `// ${message.namePascal}`%>
message <%= message.namePascal %> {
<%     message.propList.forEach(function(prop){ -%>
<%=    `   ${prop.type} ${prop.formatedName} = ${prop.index};`%>
<%     }); -%>
}

<% }); -%>

message Empty {}

message Integer {
    int32 value = 1;
}